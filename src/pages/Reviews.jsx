/*
Componente Reviews.jsx

P√°gina que muestra todas las rese√±as creadas por el usuario.
Al cargar, realiza una petici√≥n GET al back para obtener todas sus rese√±as (mediante id del usuario).
Muestra un mensaje si hay un error o si el usuario a√∫n no ha escrito rese√±as.
Aparece un mensaje de carga mientras se cargan los datos.
Cada rese√±a incluye la portada del libro, t√≠tulo, autor y puntuaci√≥n dada por el usuario. 

*/

import { useContext, useEffect, useState } from "react"
import Navegacion from "./Navegacion"
import Contexto from "../Contexto"

export default function Reviews(){

    //Obtener usuario desde el contexto
    let {usuario} = useContext(Contexto)

    //Estados locales para guardar rese√±as y estado de carga
    let [reviewsUsuario, setReviewsUsuario] = useState([]);
    let [mensaje, setMensaje] = useState("")
    let [loading, setLoading] = useState(true)

    //Petici√≥n al back para obtener las rese√±as del usuario una vez se entra en el componente
    useEffect(() => {
        setLoading(true) //se activa la carga
        setMensaje("")

        fetch(`https://gyobook-api.onrender.com/reviews/usuario/${usuario.id}`)
        .then(respuesta => respuesta.json())
        .then(data => {
            setReviewsUsuario(data) //guardar las rese√±as
            setLoading(false) //para la carga
        })
        .catch(() => {
            setMensaje("No se pudieron cargar las rese√±as, int√©ntalo m√°s tarde üò™")
            setLoading(false) //para la carga
        })
    }, [])

    return <>
                <section className="contenedor">
                    <Navegacion />
                    <section className="contenido" style={{ justifyContent: "flex-start" }}>
                        <h2 className="titulo-usuario">Rese√±as de {usuario.usuario}</h2>

                        {mensaje && <p className="mensaje">{mensaje}</p>}

                        {loading && !mensaje && <p className="mensaje-cargando">Cargando rese√±as...</p>}

                        {
                        !loading && reviewsUsuario.length == 0 ? <p>A√∫n no hay rese√±as. ¬°Empieza a explorar y a escribir! ‚ú®</p> : 
                        <div className="lista-reviews-usuario">
                            {
                                !loading && reviewsUsuario.map(review => (
                                    <div key={review.id} className="review-usuario">
                                        <img
                                            src={review.url_portada}
                                            alt={`Portada de ${review.titulo}`}
                                            className="portada-mini"
                                        />
                                        <div className="info-review">
                                            <h3>{review.titulo}</h3>
                                            <p><strong>Autor:</strong> {review.autor}</p>
                                            <p><strong>Puntuaci√≥n:</strong> {review.puntuacion} / 5 ‚≠ê</p>
                                        </div>
                                    </div>
                                ))
                            }
                        </div>
                        }
                    </section>
                </section>
            </>
}